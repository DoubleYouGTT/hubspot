% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hubspot_oauth.R
\name{default_ld_hubspot_app}
\alias{default_ld_hubspot_app}
\alias{hubspot_token_create}
\alias{hubspot_token_get}
\title{Create/get Hubspot authorization token.}
\usage{
default_ld_hubspot_app()

hubspot_token_create(
  app_info = default_ld_hubspot_app(),
  set_renv = TRUE,
  token_path = NULL
)

hubspot_token_get()
}
\arguments{
\item{app_info}{A named list with client_secret, client_id, app_id and
scopes.}

\item{set_renv}{Logical indicating whether to save the created token
as the default environment hubspot token variable. Defaults to TRUE,
meaning the token is saved to user's home directory as either the user
provided path, or
".hubspot_token.rds" (or, if that already exists, then
.hubspot_token1.rds or .hubspot_token2.rds, etc.) and the path to the
token to said token is then set in the user's .Renviron file and re-
read to start being used in current active session.}

\item{token_path}{Path where to save the token. If \code{set_renv} is \code{FALSE},
this is ignored.}
}
\value{
Named list



Either NULL or the path in which the token is saved.
}
\description{
Functions related to creating or retrieving an OAuth 2.0
token for the Hubspot API.
}
\details{
We expect you to not \emph{need} to bring your own app (BYOA), but the
\code{app_info} parameter of \code{hubspot_token_create()} ensures you can do that
if you want (for instance to define an app with only the scope needed
for the endpoints you use as opposed to all the endpoints the \code{hubspot}
package supports).

To BYOA,
\itemize{
\item \href{https://developers.hubspot.com/docs/faq/how-do-i-create-an-app-in-hubspot}{Read and execute Hubspot’s docs about how to create an app}.
You’ll need to create a Hubspot developer account.
\item Define the \code{app_info} list.
}\if{html}{\out{
<!-- end list -->
}}
\if{html}{\out{<div class="r">}}\preformatted{my_very_own_app <- list(client_secret = <CLIENTSECRET>,
       client_id = <CLIENTID>,
       app_id = <APPID>,
       scope = c(<"scope1", "scope2", etc>))
}\if{html}{\out{</div>}}
\itemize{
\item Pass the app info to \code{hubspot_token_create()}
}\if{html}{\out{
<!-- end list -->
}}
\if{html}{\out{<div class="r">}}\preformatted{hubspot_token_create(app_info = my_very_own_app)
}\if{html}{\out{</div>}}

To distribute your app across your projects or across team members, you
could make it a function in an internal package, or use environment
variables.
\subsection{Token refreshing}{

If the token expires in less than 60 seconds, it’ll be refreshed and
cached thanks to the refresh token.
}

\subsection{Authorization for Hubspot APIs}{

The Hubspot API accepts authorization via
\itemize{
\item an API key,
\item OAuth 2.0.
}

OAuth 2.0 is the \href{https://developers.hubspot.com/docs/methods/auth/oauth-overview?_ga=2.108539650.1064389456.1574673541-1134397846.1571640267}{recommended method}.
However, this package supports both.

Note that if you do nothing the package will use the “demo” API token
but this won’t give you access to your own Hubspot data. So you’ll need
to spend a little time on setup:
\itemize{
\item For rapid prototyping key, use a Hubspot API key, see
\code{hubspot_key_set()}.
\item For more secure use, without a daily limit on API calls, see
\code{hubspot_token_create()} to create a Hubspot authorization token
(OAuth 2.0).
}

If you have both saved an API key via \code{hubspot_key_set()} and a token
via \code{hubspot_token_create()}, priority will be given to using the OAuth
2.0 token. If you don’t want that, explicitely pass \code{NULL} as value for
the \code{token_path} argument of all functions.
}
}
\examples{
\dontrun{
hubspot_token_create()
}
hubspot_token_get()
}
\seealso{
Other auth: 
\code{\link{hubspot_key_get}()}
}
\concept{auth}
\keyword{internal}
